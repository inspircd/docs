name: cloak_sha256

introduction: |-
  !!! note ""
      This module can be built against a third-party library ([libpsl](https://github.com/rockdaboot/libpsl)) to add more features.

description: |-
  This module adds the `hmac-sha256` and `hmac-sha256-addr` cloaking methods for use with [the cloak module](/4/modules/cloak).

configuration:
- name: cloak
  description: |-
    The `<cloak>` tag defines a cloaking profile. This tag can be defined as many times as required.
  values_description: |-
    This module also extends the [`<cloak:method>`](/4/modules/cloak#cloak) field with the following values:
  extends: true
  added_values:
  - name: hmac-sha256
    description: |-
      If the user has a DNS hostname or is connecting via a UNIX socket then cloak with an HMAC-SHA256 hash of their hostname and socket path suffixed with the public part of that value. Otherwise, cloak with three HMAC-SHA256 hashes of significant ranges of their IP address (see below).
  - name: hmac-sha256-addr
    description: |-
      If the user is connecting via a UNIX socket then cloak with an HMAC-SHA256 hash of their socket path suffixed with the public part of the path. Otherwise, cloak with three HMAC-SHA256 hashes of significant ranges of their IP address (see below).
  attributes:
  - name: key
    type: Text
    required: false
    default: null
    description: |-
      A random 30+ character value to use as a secret key when cloaking. The longer this is the more secure it is.
  - name: prefix
    type: Text
    required: false
    default: null
    description: |-
      The value to prefix cloaks with.
  - name: suffix
    type: Text
    required: false
    default: ip
    description: |-
      The value to suffix IP address cloaks with.
  - name: case
    type: Text
    required: false
    default: lower
    description: |-
      Whether to use upper-case or lower-case characters when converting cloak hashes to a human-readable form.
  - name: hostparts
    type: Number
    required: false
    default: 3
    description: |-
      If the hmac-sha256 method is used then the maximum number of DNS hostname segments that should be visible.
  - name: pathparts
    type: Number
    required: false
    default: 1
    description: |-
      The maximum number of UNIX socket path segments that should be visible.
  - name: psl
    type: Text
    required: false
    default: null
    description: |-
      If defined and the module was built against libpsl then the path to a Public Suffix List database to use instead of `<cloak:hostparts>` for finding the public part of a hostname. Can also be set to `system` to use the system database.
  - name: enforcepsl
    type: Boolean
    required: false
    default: 'No'
    added: 4.8.0
    description: |-
      Whether to enforce PSL usage across servers. This exists to work around a bug in older v4 releases and should always be enabled on new servers.
  - name: class
    type: String
    required: false
    default: null
    description: |-
      If non-empty then a comma-delimited list of of [connect classes](/4/configuration#connect) that can receive this cloak.
  details: |-
    The case field should be set to one of the following values:

    Value | Description
    ----- | -----------
    lower | Use lower-case characters in the cloak hash.
    upper | Use upper-case characters in the cloak hash.

  example: |-
    Cloaking using the hmac-sha256 method:

    ```xml
    <cloak method="hmac-sha256"
           key="changeme"
           prefix="MyNet"
           suffix="ip"
           case="lower"
           hostparts="3"
           pathparts="1"
           psl="system"
           enforcepsl="yes"
           class="">
    ```

    Cloaking using the hmac-sha256-addr method:

    ```xml
    <cloak method="hmac-sha256-addr"
           key="changeme"
           prefix="MyNet"
           suffix="ip"
           case="lower"
           pathparts="1"
           class="">
    ```

special_notes: |-
  Assuming an IPv4 address of `12.23.34.45` and cloaked part of `74ero2cv.ucctzwrd.uyclsgi7` the cloak segments represent:

  IPv4 Segment | Cloak Segment | CIDR Range
  ------------ | ------------- | ----------
  12.23.34.45  | 74ero2cv (1)  | /32
  12.23.34     | ucctzwrd (2)  | /24
  12.23        | uyclsgi7 (3)  | /16

  Assuming an IPv6 address of `2001:db8:dead:cafe:beef:feed:f00d:face` and a cloaked part of `2rravfdm:zjmad7mb:l2kirwft` the cloak segments represent:

  IPv6 Segment                           | Cloak Segment | CIDR Range
  -------------------------------------- | ------------- | ----------
  2001:db8:dead:cafe:beef:feed:f00d:face | 2rravfdm (1)  | /128
  2001:db8:dead:cafe:beef:feed:f00d      | zjmad7mb (2)  | /112
  2001:db8:dead:cafe                     | l2kirwft (3)  | /64
