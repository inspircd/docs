#!/usr/bin/env ruby
ROOT = File.dirname __dir__
PAGES = Dir["#{ROOT}/docs/**/*.md", "#{ROOT}/docs/**/*.yml"]

linked = [ "#{ROOT}/docs/index.md" ]
PAGES.each do |file|
	contents = File.read(file)
	contents.scan(/\[[^\]]+\]\(\/([^\)]+?)\/?(?:\#[^\)]+|\/)?\)/).each do |link|
		linked << "#{ROOT}/docs/#{link[0]}.md"
		linked << "#{ROOT}/docs/#{link[0]}.yml"
		linked << "#{ROOT}/docs/#{link[0]}/index.md"
	end
	contents.scan(/\{!\s*(\S+)\s*!\}/).each do |fragment|
		linked << "#{ROOT}/docs/#{fragment[0]}"
	end
end

orphaned = 0
PAGES.each do |file|
	next if linked.include? file
	puts "Orphaned: #{file}"
	orphaned += 1
end
puts "#{orphaned} orphaned!"
exit orphaned
